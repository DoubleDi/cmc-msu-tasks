MKDIR(2)                   Linux Programmer's Manual                  MKDIR(2)



NNAAMMEE
       mkdir - create a directory

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<ssyyss//ssttaatt..hh>>
       ##iinncclluuddee <<ssyyss//ttyyppeess..hh>>

       iinntt mmkkddiirr((ccoonnsstt cchhaarr **_p_a_t_h_n_a_m_e,, mmooddee__tt _m_o_d_e));;

DDEESSCCRRIIPPTTIIOONN
       mmkkddiirr() attempts to create a directory named _p_a_t_h_n_a_m_e.

       The  argument _m_o_d_e specifies the permissions to use.  It is modified by
       the process's _u_m_a_s_k in the usual way: the permissions  of  the  created
       directory  are  (_m_o_d_e & ~_u_m_a_s_k & 0777).  Other mode bits of the created
       directory depend on the operating system.  For Linux, see below.

       The newly created directory will be owned by the effective user  ID  of
       the process.  If the directory containing the file has the set-group-ID
       bit set, or if the filesystem  is  mounted  with  BSD  group  semantics
       (_m_o_u_n_t _-_o _b_s_d_g_r_o_u_p_s or, synonymously _m_o_u_n_t _-_o _g_r_p_i_d), the new directory
       will inherit the group ownership from its parent; otherwise it will  be
       owned by the effective group ID of the process.

       If  the  parent directory has the set-group-ID bit set then so will the
       newly created directory.

RREETTUURRNN VVAALLUUEE
       mmkkddiirr() returns zero on success, or -1 if an error occurred  (in  which
       case, _e_r_r_n_o is set appropriately).

EERRRROORRSS
       EEAACCCCEESS The  parent  directory  does  not  allow write permission to the
              process, or one of the directories in  _p_a_t_h_n_a_m_e  did  not  allow
              search permission.  (See also ppaatthh__rreessoolluuttiioonn(7).)

       EEDDQQUUOOTT The  user's quota of disk blocks or inodes on the filesystem has
              been exhausted.

       EEEEXXIISSTT _p_a_t_h_n_a_m_e already exists (not necessarily as a directory).   This
              includes the case where _p_a_t_h_n_a_m_e is a symbolic link, dangling or
              not.

       EEFFAAUULLTT _p_a_t_h_n_a_m_e points outside your accessible address space.

       EELLOOOOPP  Too many symbolic links were encountered in resolving _p_a_t_h_n_a_m_e.

       EEMMLLIINNKK The number  of  links  to  the  parent  directory  would  exceed
              LLIINNKK__MMAAXX.

       EENNAAMMEETTOOOOLLOONNGG
              _p_a_t_h_n_a_m_e was too long.

       EENNOOEENNTT A  directory  component  in _p_a_t_h_n_a_m_e does not exist or is a dan‐
              gling symbolic link.

       EENNOOMMEEMM Insufficient kernel memory was available.

       EENNOOSSPPCC The device containing _p_a_t_h_n_a_m_e has no room for  the  new  direc‐
              tory.

       EENNOOSSPPCC The  new  directory  cannot  be  created because the user's disk
              quota is exhausted.

       EENNOOTTDDIIRR
              A component used as a directory in _p_a_t_h_n_a_m_e is not, in  fact,  a
              directory.

       EEPPEERRMM  The filesystem containing _p_a_t_h_n_a_m_e does not support the creation
              of directories.

       EERROOFFSS  _p_a_t_h_n_a_m_e refers to a file on a read-only filesystem.

CCOONNFFOORRMMIINNGG TTOO
       SVr4, BSD, POSIX.1-2001.

NNOOTTEESS
       Under Linux apart from the permission bits, only the SS__IISSVVTTXX  mode  bit
       is  honored.   That is, under Linux the created directory actually gets
       mode (_m_o_d_e & ~_u_m_a_s_k & 01777).  See also ssttaatt(2).

       There are many infelicities in the protocol underlying  NFS.   Some  of
       these affect mmkkddiirr().

SSEEEE AALLSSOO
       mmkkddiirr(1), cchhmmoodd(2), cchhoowwnn(2), mmkkddiirraatt(2), mmkknnoodd(2), mmoouunntt(2), rrmmddiirr(2),
       ssttaatt(2), uummaasskk(2), uunnlliinnkk(2), ppaatthh__rreessoolluuttiioonn(7)

CCOOLLOOPPHHOONN
       This page is part of release 3.54 of the Linux  _m_a_n_-_p_a_g_e_s  project.   A
       description  of  the project, and information about reporting bugs, can
       be found at http://www.kernel.org/doc/man-pages/.



Linux                             2013-01-27                          MKDIR(2)
